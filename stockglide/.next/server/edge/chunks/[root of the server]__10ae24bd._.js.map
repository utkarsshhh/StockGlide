{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n\nexport function middleware(request: NextRequest) {\n    const sessionCookie = request.cookies.get('token');\n    const isAuthenticated = !!sessionCookie?.value;\n    const { pathname } = request.nextUrl;\n  \n    console.log(\"isAuthenticated:\", isAuthenticated);\n    console.log(\"pathname:\", pathname);\n  \n    const isAuthRoute = pathname.startsWith('/auth');\n    const isProtectedRoute = pathname.startsWith('/dashboard') || pathname.startsWith('/profile');\n  \n    // üõ°Ô∏è Block unauthenticated users from protected routes\n    if (isProtectedRoute && !isAuthenticated) {\n      return NextResponse.redirect(new URL('/auth/login', request.url));\n    }\n  \n    // üîê Prevent authenticated users from accessing login/register pages\n    // Only redirect if they're not already on /auth/logout (or whatever is safe)\n    if (isAuthRoute && isAuthenticated && pathname !== '/auth/logout') {\n      return NextResponse.redirect(new URL('/dashboard', request.url));\n    }\n  \n    return NextResponse.next();\n}\n\nexport const config = {\n  matcher: ['/dashboard/:path*', '/profile/:path*'],\n};"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC3C,MAAM,gBAAgB,QAAQ,OAAO,CAAC,GAAG,CAAC;IAC1C,MAAM,kBAAkB,CAAC,CAAC,eAAe;IACzC,MAAM,EAAE,QAAQ,EAAE,GAAG,QAAQ,OAAO;IAEpC,QAAQ,GAAG,CAAC,oBAAoB;IAChC,QAAQ,GAAG,CAAC,aAAa;IAEzB,MAAM,cAAc,SAAS,UAAU,CAAC;IACxC,MAAM,mBAAmB,SAAS,UAAU,CAAC,iBAAiB,SAAS,UAAU,CAAC;IAElF,wDAAwD;IACxD,IAAI,oBAAoB,CAAC,iBAAiB;QACxC,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,eAAe,QAAQ,GAAG;IACjE;IAEA,qEAAqE;IACrE,6EAA6E;IAC7E,IAAI,eAAe,mBAAmB,aAAa,gBAAgB;QACjE,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC5B;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAkB;AACnD"}}]
}